protobox:
  version: 0.0.1
  build: custom
  document: mgWb
  description: 'Based on: getprotobox.com/share/mgWb'
  dashboard:
    install: 0
    path: /vagrant/web/protobox

vagrant:
  vm:
    box: hashicorp/precise64
    box_check_update: 'true'
    hostname: ts.local
    network:
      private_network: 192.168.56.225
      forwarded_port:
        port1:
          host: ''
          guest: ''
    provider:
      virtualbox:
        modifyvm:
          name: ts.local
          memory: 2048
      parallels:
        name: ts.local
        set:
          memsize: '2048'
    provision:
      ansible:
        playbook: ansible/site.yml
    synced_folder:
      root:
        id: vagrant-root
        source: ./
        target       : /vagrant/
        nfs: false
        owner: vagrant
        group: www-data
        mount_options:
          - dmode=775
          - fmode=775
    usable_port_range: 2200..2250

  ssh:
    host: null
    port: null
    private_key_path: ["~/.vagrant.d/insecure_private_key","~/.ssh/id_rsa"]
#    public_key_path: []
    username: vagrant
    guest_port: null
    keep_alive: true
    forward_agent: true
    forward_x11: false
    shell: 'bash -l'

  vagrant:
    host: ':detect'

server:
  packages:
    - vim
    - git-flow
    - curl
    - wget
    - tree
    - libpq-dev
  ssh:
    authorized_keys: [ ]
    private_keys: [ ]
    config: [ ]
  dotfiles:
    install: 0
    repo: ''
    files: [ ".bash", ".bashrc" ]
    bash_aliases: null

apache:
  install: 1
  modules:
    - rewrite
  user: vagrant
  group: www-data
  default_vhost: false
  mpm_module: prefork
  vhosts:
    -
      name: ts.local
      servername: ts.local
      serveraliases:
        - ts.local
      docroot: /var/www/web
      port: 80
      setenv:
        - 'APP_ENV dev'
      override:
        - All
nginx:
  install: 0
  mpm_module: fpm
  vhosts:
    -
      name: ts.local
      server_name: ts.local
      server_aliases:
        - ts.local
      www_root: /var/www/web
      listen_port: 80
      index_files:
        - index.html
        - index.htm
        - index.php
      envvars:
        - 'APP_ENV dev'

php:
  install: 1
  version: '54'
  modules:
    - php5-cli
    - php5-curl
    - php5-dev
    - php5-fpm
    - php5-intl
    - php5-mcrypt
    - php5-memcached
    - php5-mysql
    - php5-xdebug
    - php5-gd
  pear:
    install: 1
    modules: [ ]
  pecl:
    install: 1
    modules: [ "pecl_http" ]
  composer:
    install: 1
  mailcatcher:
    install: 0
  phpmyadmin:
    install: 0
  xdebug:
    install: 0
    webgrind: 0
    settings:
      max_nesting_level: '400'
      remote_enable: 'on'
      remote_connect_back: 'on'
      html_errors: '1'
      extended_info: '1'
      idekey: 'vagrant'
  xhprof:
    install: 0
    xhgui: 0
  ini:
    display_errors: On
    display_startup_errors: On
    error_reporting: '-1'
    short_open_tag: Off
  timezone: UTC

ruby:
  install: 1
  gems: [ "bundle" ]

node:
  install: 1
  npm:
    - broccoli
    - broccoli-cli

mariadb:
  install: 1
  version: '5.5'
  #repository: ''
  root_password: 'local'
  databases:
    - name: ts_dev
      host: localhost
      user: dev
      password: local
      grant:
        - ALL
      sql_file: ''

ngrok:
  install: 1
  port: 80

zsh:
  install: 1

memcached:
  install: 1

varnish:
  install: 1
